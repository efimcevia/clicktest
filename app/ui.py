import streamlit as st
import json
import datetime
from app import state, logic

def export_scenario():
    steps = state.get_steps()
    if not steps:
        st.warning("–ù–µ—Ç —à–∞–≥–æ–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º JSON
    json_data = json.dumps(steps, indent=2)
    
    # –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    filename = f"scenario_{timestamp}.json"

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    st.download_button(
        label="–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π",
        data=json_data,
        file_name=filename,
        mime='application/json'
    )
    st.success("–°—Ü–µ–Ω–∞—Ä–∏–π —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω!")

def import_scenario():
    uploaded_file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ .json —Ñ–∞–π–ª –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞", type=["json"])
    
    if uploaded_file is not None:
        try:
            # –°—á–∏—Ç—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
            content = uploaded_file.read()
            steps = json.loads(content)

            # –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
            if not isinstance(steps, list) or not all(isinstance(step, dict) and "type" in step for step in steps):
                st.error("–§–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥—ë–Ω –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π.")
                return

            # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—è —Å –Ω–æ–≤—ã–º–∏ —à–∞–≥–∞–º–∏
            state.clear_steps()
            for step in steps:
                state.add_step(step)

            st.success("–°—Ü–µ–Ω–∞—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω!")
        
        except json.JSONDecodeError:
            st.error("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª.")

def step_form():
    with st.form("step_form"):
        st.subheader("‚ûï –î–æ–±–∞–≤–∏—Ç—å —à–∞–≥–∏")
        step_type = st.selectbox("–¢–∏–ø —à–∞–≥–∞", ["goto", "click", "fill", "wait_for", "screenshot"])
        selector = st.text_input("–°–µ–ª–µ–∫—Ç–æ—Ä (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)", "")
        value = st.text_input("–ó–Ω–∞—á–µ–Ω–∏–µ (URL, —Ç–µ–∫—Å—Ç, –≤—Ä–µ–º—è –∏ —Ç.–ø.)", "")
        submitted = st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å —à–∞–≥")

        if submitted:
            step = {"type": step_type}
            if selector:
                step["selector"] = selector
            if value:
                step["value"] = value
            state.add_step(step)
            st.success("–®–∞–≥ –¥–æ–±–∞–≤–ª–µ–Ω!")

def step_view():
    st.subheader("üßæ –®–∞–≥–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è")
    steps = state.get_steps()

    if not steps:
        st.info("–®–∞–≥–∏ –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")
    else:
        for step in steps:
            st.code(json.dumps(step, indent=2), language="json")

        # –§–æ—Ä–º–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä—è–º–æ –∑–¥–µ—Å—å
        with st.form("save_scenario_form"):
            name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è", key="save_scenario_name")
            submitted = st.form_submit_button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π")

            if submitted:
                if not name:
                    st.warning("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è.")
                else:
                    ok, err = logic.save_scenario(name, steps)
                    if ok:
                        st.success("–°—Ü–µ–Ω–∞—Ä–∏–π —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")
                    else:
                        st.error(err)

        if st.button("–û—á–∏—Å—Ç–∏—Ç—å —à–∞–≥–∏"):
            state.clear_steps()

def select_scenario():
    scenarios = logic.get_all_scenarios()
    names = [s.name for s in scenarios]
    selected_name = st.selectbox("–°—Ü–µ–Ω–∞—Ä–∏–∏", ["<–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π>"] + names)

    if selected_name != "<–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π>":
        s = logic.get_scenario_by_name(selected_name)
        state.clear_steps()
        steps = json.loads(s.steps_json)
        for step in steps:
            state.add_step(step)
        return s
    return None

# –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å Streamlit –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def main():
    st.title("–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤")

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    step_form()
    export_scenario()  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
    import_scenario()  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è
    step_view()        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —à–∞–≥–æ–≤ —Å—Ü–µ–Ω–∞—Ä–∏—è
    select_scenario()  # –í—ã–±–æ—Ä —Å—Ü–µ–Ω–∞—Ä–∏—è

if __name__ == "__main__":
    main()
