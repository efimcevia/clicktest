import streamlit as st
import json
from app import state, logic

def step_form():
    with st.form("step_form"):
        st.subheader("‚ûï –î–æ–±–∞–≤–∏—Ç—å —à–∞–≥–∏")
        step_type = st.selectbox("–¢–∏–ø —à–∞–≥–∞", ["goto", "click", "fill", "wait_for", "screenshot"])
        selector = st.text_input("–°–µ–ª–µ–∫—Ç–æ—Ä (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)", "")
        value = st.text_input("–ó–Ω–∞—á–µ–Ω–∏–µ (URL, —Ç–µ–∫—Å—Ç, –≤—Ä–µ–º—è –∏ —Ç.–ø.)", "")
        submitted = st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å —à–∞–≥")

        if submitted:
            step = {"type": step_type}
            if selector:
                step["selector"] = selector
            if value:
                step["value"] = value
            state.add_step(step)
            st.success("–®–∞–≥ –¥–æ–±–∞–≤–ª–µ–Ω!")

def step_view():
    st.subheader("üßæ –®–∞–≥–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è")
    steps = state.get_steps()

    if not steps:
        st.info("–®–∞–≥–∏ –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")
    else:
        for step in steps:
            st.code(json.dumps(step, indent=2), language="json")

        # –§–æ—Ä–º–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä—è–º–æ –∑–¥–µ—Å—å
        with st.form("save_scenario_form"):
            name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è", key="save_scenario_name")
            submitted = st.form_submit_button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π")

            if submitted:
                if not name:
                    st.warning("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è.")
                else:
                    ok, err = logic.save_scenario(name, steps)
                    if ok:
                        st.success("–°—Ü–µ–Ω–∞—Ä–∏–π —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")
                    else:
                        st.error(err)

        if st.button("–û—á–∏—Å—Ç–∏—Ç—å —à–∞–≥–∏"):
            state.clear_steps()


def select_scenario():
    scenarios = logic.get_all_scenarios()
    names = [s.name for s in scenarios]
    selected_name = st.selectbox("–°—Ü–µ–Ω–∞—Ä–∏–∏", ["<–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π>"] + names)

    if selected_name != "<–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π>":
        s = logic.get_scenario_by_name(selected_name)
        state.clear_steps()
        steps = json.loads(s.steps_json)
        for step in steps:
            state.add_step(step)
        return s
    return None